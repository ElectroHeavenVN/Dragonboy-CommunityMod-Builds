name: Biên dịch dự án (QLTK, Game)

# on: [push, pull_request]
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  check-commit:
    name: Kiểm tra commit mới
    runs-on: windows-latest
    outputs:
      cancel: ${{ steps.check_hash.outputs.cancel }}
    strategy:
      fail-fast: false
    steps:
      - name: Clone pk9r327/Dragonboy branch Unity-project
        uses: actions/checkout@v4.1.1
        with:
          repository: pk9r327/Dragonboy
          ref: Unity-project
      - name: Cache commit mới nhất
        uses: actions/cache@v4.0.2
        with:
          path: latest-commit.txt
          key: latest-commit
          restore-keys: latest-commit
      - name: kiểm tra hash
        id: check_hash
        run: $hash = git rev-parse HEAD; if ((Test-Path latest-commit.txt -PathType Leaf)) { $commitContent = Get-Content -Path latest-commit.txt; $output = ($commitContent -eq $hash).ToString().ToLower(); } else { $output = "false" } $output = "cancel=$output".ToString().ToLower(); echo $output | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
      - name: Lấy hash commit mới nhất
        run: git rev-parse HEAD > latest-commit.txt
  build-Account-Manager:
    name: Biên dịch QLTK (Windows, .NET 8.0)
    needs: [check-commit]
    if: needs.check-commit.outputs.cancel == 'false'
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: windows-latest
    env:
      Solution-Path: QLTK\QLTK.sln
    steps:
    - name: Clone pk9r327/Dragonboy branch Unity-project
      uses: actions/checkout@v4.1.1
      with:
        repository: pk9r327/Dragonboy
        ref: Unity-project
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
    - name: Setup NuGet
      uses: nuget/setup-nuget@v2
    - name: Restore project
      run: msbuild ${{ env.Solution-Path }} /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
    - name: Restore NuGet Packages
      run: nuget restore ${{ env.Solution-Path }}
    - name: Biên dịch dự án
      run: msbuild ${{ env.Solution-Path }} -t:rebuild -property:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
    - name: Upload file đã biên dịch
      uses: actions/upload-artifact@v4.3.1
      with:
        name: QLTK_${{ matrix.configuration }}
        path: QLTK/bin/${{ matrix.configuration }}
  build-Unity-Windows:
    name: Biên dịch ${{ matrix.targetPlatform }} ${{matrix.scriptingBackend}} trên máy chủ Windows
    needs: [check-commit]
    if: needs.check-commit.outputs.cancel == 'false'
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows 
          - StandaloneWindows64 
        scriptingBackend:
          - Mono # 0
          - IL2CPP # 1
    steps:
      - name: Clone pk9r327/Dragonboy branch Unity-project
        uses: actions/checkout@v4.1.1
        with:
          repository: pk9r327/Dragonboy
          ref: Unity-project
      - name: Cache
        uses: actions/cache@v4.0.2
        with:
          path: GameProject/DragonBoy/Library
          key: Library-${{matrix.targetPlatform}}
          restore-keys: Library-
      - name: Đổi scripting backend thành ${{matrix.scriptingBackend}}
        run: cd GameProject && pwsh ./set_scripting_backend.ps1 -projectSettingsPath "DragonBoy/ProjectSettings/ProjectSettings.asset" -platform ${{ matrix.targetPlatform }} -scriptingBackend ${{matrix.scriptingBackend}} || powershell ./set_scripting_backend.ps1 -projectSettingsPath "DragonBoy/ProjectSettings/ProjectSettings.asset" -platform ${{ matrix.targetPlatform }} -scriptingBackend ${{matrix.scriptingBackend}};     
      - name: Biên dịch dự án
        uses: game-ci/unity-builder@v4.2.3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath: GameProject/DragonBoy
          buildName: DragonBoy
          allowDirtyBuild: true          
      - name: Upload file game đã biên dịch
        uses: actions/upload-artifact@v4.3.1
        with:
          name: Build-${{ matrix.targetPlatform }}-${{matrix.scriptingBackend}}
          path: build/${{ matrix.targetPlatform }}
  build-Unity-Linux:
    name: Biên dịch ${{ matrix.targetPlatform }} ${{matrix.scriptingBackend}} trên máy chủ Linux
    needs: [check-commit]
    if: needs.check-commit.outputs.cancel == 'false'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneLinux64
          - Android
        scriptingBackend:
          - Mono # 0
          - IL2CPP # 1 
    steps: 
      - name: Clone pk9r327/Dragonboy branch Unity-project
        uses: actions/checkout@v4.1.1
        with:
          repository: pk9r327/Dragonboy
          ref: Unity-project
      - name: Cache
        uses: actions/cache@v4.0.2
        with:
          path: GameProject/DragonBoy/Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - name: Đổi scripting backend thành ${{matrix.scriptingBackend}}
        run: cd GameProject && chmod +x set_scripting_backend.sh && ./set_scripting_backend.sh "DragonBoy/ProjectSettings/ProjectSettings.asset" "${{ matrix.targetPlatform }}" "${{matrix.scriptingBackend}}"
      - if: ${{ matrix.targetPlatform == 'Android' }} 
        name: Giải phóng bộ nhớ (Android build)
        uses: jlumbroso/free-disk-space@v1.3.1
      - name: Biên dịch dự án
        uses: game-ci/unity-builder@v4.2.3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          androidKeystoreName: DragonBoy-pk9r327-UnityProject.keystore # This file won't exist, but this property needs to exist.
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
          androidTargetSdkVersion: AndroidApiLevel33
          projectPath: GameProject/DragonBoy
          buildName: DragonBoy
          allowDirtyBuild: true
      - name: Upload file game đã biên dịch
        uses: actions/upload-artifact@v4.3.1
        with:
          name: Build-${{ matrix.targetPlatform }}-${{matrix.scriptingBackend}}
          path: build/${{ matrix.targetPlatform }}
  send-artifact-links-announcement:
    name: Gửi link artifact tới Discord webhook
    needs: [build-Unity-Windows, build-Unity-Linux, build-Account-Manager]
    if: ${{ always() && (needs.build-Unity-Windows.result != 'cancelled' && needs.build-Unity-Linux.result != 'cancelled' && needs.build-Account-Manager.result != 'cancelled') }}
    runs-on: ubuntu-latest
    steps:
      - name: gọi API để lấy link artifact
        id: get_artifact_links
        run: |
          artifactsUrl=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=1 | jq -r '.workflow_runs[0].artifacts_url')
          output="artifact-data="
          output="${output}$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $artifactsUrl)"
          echo $output >> "$GITHUB_OUTPUT"
      - name: Tạo thông báo để gửi tới Discord webhook
        run: |
          {
            echo 'OUTPUT<<EOF'
            json='${{ steps.get_artifact_links.outputs.artifact-data }}'
            output="Kết quả:"$'\n'
            output="${output}- Biên dịch QLTK: **${{ needs.build-Account-Manager.result }}**"$'\n'
            output="${output}- Biên dịch game trên Windows: **${{ needs.build-Unity-Windows.result }}**"$'\n'
            output="${output}- Biên dịch game trên Linux: **${{ needs.build-Unity-Linux.result }}**"$'\n'
            output="${output}$(echo ${json} | jq '.artifacts | length') Artifact:"$'\n'
            end_value=$(($(echo ${json} | jq '.artifacts | length') - 1))
            for i in $(seq 0 $end_value)
            do
              output="${output}- ["
              output="${output}$(echo ${json} | jq -r ".artifacts[${i}].name")"
              output="${output}](https://github.com/${{ github.repository }}/actions/runs/"
              output="${output}$(echo ${json} | jq -r ".artifacts[${i}].workflow_run.id")"
              output="${output}/artifacts/"
              output="${output}$(echo ${json} | jq -r ".artifacts[${i}].id")"
              output=$"${output}"')'$'\n'
            done
            echo "$output" 
            echo EOF
          } >> "$GITHUB_ENV"
      - name: Lấy màu cho thông báo
        run: |
          {
            echo "color="
            buildAccountManager="${{ needs.build-Account-Manager.result }}"
            buildUnityLinux="${{ needs.build-Unity-Linux.result }}"
            buildUnityWindows="${{ needs.build-Unity-Windows.result }}"
            failure_count=0
            if [ "$buildAccountManager" == "failure" ]; then
                ((failure_count++))
            fi
            if [ "$buildUnityLinux" == "failure" ]; then
                ((failure_count++))
            fi
            if [ "$buildUnityWindows" == "failure" ]; then
                ((failure_count++))
            fi
            if [ "$failure_count" -eq 3 ]; then
                echo "0xff0000"
            elif [ "$failure_count" -eq 2 ]; then
                echo "0xffa500"
            elif [ "$failure_count" -eq 1 ]; then
                echo "0xffff00"
            else
                echo "0x00ff00"
            fi
          } >> "$GITHUB_ENV"
      - name: Gửi thông báo tới Discord webhook
        uses: sarisia/actions-status-discord@v1.14.0
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          nodetail: true
          nofail: true
          title: ${{ github.event.repository.name }}
          url: ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}
          color: ${{ env.color }}
          description: |
            ${{ env.OUTPUT }}